import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import entity.Item;
import entity.Nomenclature;
import entity.Storage;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 * Created by Кирилл on 14.04.2017.
 */
public class AddItem extends JFrame {
    private JPanel panel1;
    private JTextField adress;
    private JButton add;
    private JComboBox comboBox1;
    private JComboBox comboBox2;
    private Controller controller;
    private ArrayList storageList;
    private ArrayList nomenclatureList;


    public AddItem(final Controller controller, JTable table) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }
        this.controller = controller;
        $$$setupUI$$$();
        initComboBox();
        setContentPane(panel1);
        pack();
        setVisible(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Добавить товары на склад");
        this.controller = controller;
        add.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Nomenclature nomenclature = (Nomenclature) nomenclatureList.get(comboBox1.getSelectedIndex());
                Storage storage = (Storage) storageList.get(comboBox2.getSelectedIndex());
                Item o = new Item();
                o.setNomenclatureId(nomenclature.getId());
                o.setStorageId(storage.getId());
                o.setQuanity(Integer.valueOf(adress.getText()));
                controller.getHibernate().add(o);
            }
        });
        controller.updateItemTable(controller.getHibernate().get("Item"), table);
    }

    public AddItem(final Controller controller, Item item) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }
        this.controller = controller;
        $$$setupUI$$$();
        initComboBox();
        setContentPane(panel1);
        pack();
        setVisible(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        adress.setText(Integer.toString(item.getQuanity()));
        setTitle("Добавить товары на склад");
        this.controller = controller;
        add.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Nomenclature nomenclature = (Nomenclature) nomenclatureList.get(comboBox1.getSelectedIndex());
                Storage storage = (Storage) storageList.get(comboBox2.getSelectedIndex());
                item.setNomenclatureId(nomenclature.getId());
                item.setStorageId(storage.getId());
                item.setQuanity(Integer.valueOf(adress.getText()));
                controller.getHibernate().add(item);
            }
        });
    }

    private void initComboBox() {
        storageList = controller.getHibernate().get("Storage");
        nomenclatureList = controller.getHibernate().get("Nomenclature");
        for (Object o : storageList) {
            Storage o1 = (Storage) o;
            comboBox2.addItem(o1.getName());
        }
        for (Object o : nomenclatureList) {
            Nomenclature o1 = (Nomenclature) o;
            comboBox1.addItem(o1.getName());
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("fill:d:noGrow", "center:d:noGrow"));
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:11dlu:noGrow,center:d:noGrow,left:4dlu:noGrow,fill:229px:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        CellConstraints cc = new CellConstraints();
        panel2.add(panel1, cc.xy(1, 1));
        final JLabel label1 = new JLabel();
        label1.setText("Номенклатура");
        panel1.add(label1, cc.xy(3, 3));
        final JLabel label2 = new JLabel();
        label2.setText("Склад");
        panel1.add(label2, cc.xy(3, 5));
        final JLabel label3 = new JLabel();
        label3.setText("Количество");
        panel1.add(label3, cc.xy(3, 7));
        adress = new JTextField();
        panel1.add(adress, cc.xy(5, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        add = new JButton();
        add.setText("Добавить");
        panel1.add(add, cc.xy(3, 9));
        comboBox1 = new JComboBox();
        panel1.add(comboBox1, cc.xy(5, 3));
        comboBox2 = new JComboBox();
        panel1.add(comboBox2, cc.xy(5, 5));
    }
}
