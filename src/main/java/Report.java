import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import com.sun.org.apache.regexp.internal.RE;
import entity.*;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Vector;

/**
 * Created by Кирилл on 19.04.2017.
 */
public class Report extends JFrame {
    private JPanel panel1;
    private JTextField textField1;
    private JTextField textField2;
    private JTable table1;
    private JButton formReport;
    private JButton экспортButton;
    private Controller controller;

    public Report(Controller controller) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }
        $$$setupUI$$$();
        this.controller = controller;
        setContentPane(panel1);
        pack();
        setVisible(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Отчет по продажам");
        this.controller = controller;
        formReport.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                /*ArrayList orders = controller.getHibernate().get("SellOrder");*/
                formReport();
            }
        });
    }

    private void formReport() {
        ArrayList data = controller.getHibernate().get("SellOrder");
        Vector<String> tableHeaders = new Vector<String>();
        tableHeaders.add("");
        tableHeaders.add("");
        tableHeaders.add("");
        final Vector tableData = new Vector();
        double sum = 0;
        for (Object o : data) {
            SellOrder order = (SellOrder) o;
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(order.getId());
            int clientId = order.getClientId();
            ArrayList<Client> clients = controller.getHibernate().get("Client where id=" + clientId);
            oneRow.add(clients.get(0).getName());
            oneRow.add(order.getSum());
            sum += order.getSum();
            tableData.add(oneRow);
            oneRow = new Vector<Object>();
            oneRow.add("");
            oneRow.add("Позиции заказа:");
            tableData.add(oneRow);
            ArrayList items = controller.getHibernate().get("SellOrderItem where sellOrdersId=" + order.getId());
            for (Object i : items) {
                SellOrderItem sellOrderItem = (SellOrderItem) i;
                ArrayList curItem = controller.getHibernate().get("Item where id=" + sellOrderItem.getItemsId());
                Item item = (Item) curItem.get(0);
                Vector<Object> row = new Vector<Object>();
                ArrayList curItemsQuery = controller.getHibernate().get("Item");
                ArrayList nom = controller.getHibernate().get("Nomenclature where id=" + item.getNomenclatureId());
                Nomenclature nomenclature = (Nomenclature) nom.get(0);
                row.add("");
                row.add(nomenclature.getName());
                row.add(((SellOrderItem) i).getQuanity());
                tableData.add(row);
            }
            Vector<Object> row = new Vector<Object>();
            row.add("");
            row.add("");
            row.add("");
            tableData.add(row);
        }
        Vector<Object> oneRow = new Vector<Object>();
        oneRow.add("");
        oneRow.add("Итого:");
        oneRow.add(sum);
        tableData.add(oneRow);
        table1.setModel(new CustomTableModel(tableData, tableHeaders));
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:33px:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        final JLabel label1 = new JLabel();
        label1.setText("Дата начала");
        CellConstraints cc = new CellConstraints();
        panel1.add(label1, cc.xy(3, 3));
        textField1 = new JTextField();
        panel1.add(textField1, cc.xy(5, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label2 = new JLabel();
        label2.setText("Дата конца");
        panel1.add(label2, cc.xy(3, 5));
        textField2 = new JTextField();
        panel1.add(textField2, cc.xy(5, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, cc.xy(5, 7, CellConstraints.FILL, CellConstraints.FILL));
        table1 = new JTable();
        scrollPane1.setViewportView(table1);
        formReport = new JButton();
        formReport.setText("Сформировать");
        panel1.add(formReport, cc.xy(5, 9));
        экспортButton = new JButton();
        экспортButton.setText("Экспорт");
        panel1.add(экспортButton, cc.xy(5, 11));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
